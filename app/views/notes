  <%= link_to("Most Popular Comic", popular_comic_path) %>


form_for writes out methods/the form. itd like macros 
*form_for is url reliant
using it to create a model, make validations, form- for is checking for the attribute calling for the writer methods

f.collection_select {argument, collection}#:brand_id, Brand.all, :id,:name, prompt:t promts:true
#comic view action ^

index#comic
<% flash[:message] %>

routes( "static#home")

show user#action
<h1>My Account</h1>
<p>Username: <%= @user.username %></p>
<p>Email: <%= @user.email %></p>

purchase view:
<%= form_for(@purchase) do |f| %>
    <%= f.label :location %>
    <%= f.text_field :location %><br><br>
    <%= f.label :purchase_total %>
    <%= f.number_field :purchase_total %><br><br>
    <% f.hidden_field :comic_id, :value => @comic.id %>
    <%= f.submit %>

<% end %

omniauth = github.com.omniauth/omniauth
pp : pretty print

purchase show
<h4><div>$<%= @purchase.purchase_total %></div></h4>


questions
 
 need to create a scope methods
 need for the comic the current user purchases it show  the comic they purchased

 do scope methods alphabetical
 protect edit update delete purchases, conditioning conttroller and view hide the edit and delete
